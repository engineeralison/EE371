//==============================================================================
// lights5in
// Displays a 5-bit value on two 7-segment displays (HEX0 and HEX1)
// Shows decimal values from 0 to 31 using common 7-seg encoding
//==============================================================================
module lights_5bits (
    input  logic [4:0] in,
    output logic [6:0] HEX0, HEX1
);
    always_comb begin
        case (in)
            5'd0:  {HEX1, HEX0} = {7'b1000000, 7'b1000000}; // 00
            5'd1:  {HEX1, HEX0} = {7'b1000000, 7'b1001111}; // 01
            5'd2:  {HEX1, HEX0} = {7'b1000000, 7'b0100100}; // 02
            5'd3:  {HEX1, HEX0} = {7'b1000000, 7'b0110000}; // 03
            // ... (continue pattern)
            5'd31: {HEX1, HEX0} = {7'b0110000, 7'b1001111}; // 31
            default: {HEX1, HEX0} = {7'h7F, 7'h7F};         // Blank
        endcase
    end
endmodule

//==============================================================================
// lights3in
// Displays a 3-bit value on one 7-segment display (HEX0)
// Shows decimal values from 0 to 7 using common 7-seg encoding
//==============================================================================
module lights_3bits (
    input  logic [2:0] in,
    output logic [6:0] HEX0
);
    always_comb begin
        case (in)
            3'd0: HEX0 = 7'b1000000; // 0
            3'd1: HEX0 = 7'b1001111; // 1
            3'd2: HEX0 = 7'b0100100; // 2
            3'd3: HEX0 = 7'b0110000; // 3
            3'd4: HEX0 = 7'b0011001; // 4
            3'd5: HEX0 = 7'b0010010; // 5
            3'd6: HEX0 = 7'b0000010; // 6
            3'd7: HEX0 = 7'b1111000; // 7
            default: HEX0 = 7'h7F;   // Blank
        endcase
    end
endmodule
